dist: xenial
language: python
python:
  - "3.7"

cache:
  - pip
  - ccache

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - cmake
      - python3-dev
      - g++-7

env:
  global:
    - CC=gcc-7
    - CXX=g++-7
  matrix:
    - USE_CONDA=true ESPNET_PYTHON_VERSION=3.7 TH_VERSION=1.0.1 CHAINER_VERSION=5.0.0
    - USE_CONDA=false ESPNET_PYTHON_VERSION=3.7 TH_VERSION=1.0.1 CHAINER_VERSION=5.0.0
    - USE_CONDA=true ESPNET_PYTHON_VERSION=3.7 TH_VERSION=1.1.0 CHAINER_VERSION=5.0.0
    - USE_CONDA=false ESPNET_PYTHON_VERSION=3.7 TH_VERSION=1.1.0 CHAINER_VERSION=5.0.0
    # torch nightly with chainer stable
    - USE_CONDA=true ESPNET_PYTHON_VERSION=3.7 TH_VERSION=nightly CHAINER_VERSION=5.0.0
    - USE_CONDA=false ESPNET_PYTHON_VERSION=3.7 TH_VERSION=nightly CHAINER_VERSION=5.0.0
    # chainer nightly with torch stable
    - USE_CONDA=false ESPNET_PYTHON_VERSION=3.7 TH_VERSION=1.0.1 CHAINER_VERSION=6.0.0
    - USE_CONDA=true ESPNET_PYTHON_VERSION=3.7 TH_VERSION=1.0.1 CHAINER_VERSION=6.0.0

install:
  - pip install chainer==${CHAINER_VERSION};
  - |
    if [[ ${USE_CONDA} == false ]]; then
        if [[ ${TH_VERSION} == nightly ]]; then
            pip install torch_nightly -f https://download.pytorch.org/whl/nightly/cpu/torch_nightly.html
        else
            pip install --quiet torch==${TH_VERSION} -f https://download.pytorch.org/whl/cpu/stable
        fi
    else
        cd tools
        make PYTHON_VERSION=${ESPNET_PYTHON_VERSION} venv
        source venv/etc/profile.d/conda.sh
        conda config --set always_yes yes --set changeps1 no
        conda activate
        conda update -y conda
        if [[ ${TH_VERSION} == nightly ]]; then
            conda install pytorch-nightly-cpu -c pytorch
        else
            conda install -y pytorch-cpu=${TH_VERSION} -c pytorch
        fi
        cd -
    fi
  - pip install -U pip wheel
  # install espnet
  - pip install -e .
  - pip install -e .[test]
  - pip install -e .[doc]
  # [FIXME] hacking==1.1.0 requires flake8<2.7.0,>=2.6.0, but that version has a problem around fstring
  - pip install -U flake8
  # install matplotlib
  - pip install matplotlib
  # install warp-ctc (use @jnishi patched version)
  - git clone https://github.com/jnishi/warp-ctc.git
  - if [[ "${TH_VERSION}" != 0.4.1 ]]; then
      cd warp-ctc; git checkout -b pytorch-1.0.0 remotes/origin/pytorch-1.0.0; cd ..;
    fi
  - cd warp-ctc && mkdir build && cd build && cmake .. && make -j4 && cd ..
  - pip install cffi
  - cd pytorch_binding && python setup.py install && cd ../..
  # install kaldiio
  - pip install git+https://github.com/nttcslab-sp/kaldiio.git
  # install chainer_ctc
  - pip install cython
  - git clone https://github.com/jheymann85/chainer_ctc.git
  - cd chainer_ctc && chmod +x install_warp-ctc.sh && ./install_warp-ctc.sh
  - pip install . && cd ..
  - export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:`pwd`/chainer_ctc/ext/warp-ctc/build
  # install bats-core
  - git clone https://github.com/bats-core/bats-core.git
  - export PATH=$(pwd)/bats-core/bin:$PATH

script:
  - ./ci/test_shell.sh
  - flake8 espnet test utils;
  - autopep8 -r espnet test utils --global-config .pep8 --diff --max-line-length 120 | tee check_autopep8
  - test ! -s check_autopep8
  - pytest
  - bats test_utils
  - travis-sphinx build --source=doc --nowarn

sudo: false

after_success:
    - travis-sphinx deploy
