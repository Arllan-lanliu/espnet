#!/bin/bash
set -euo pipefail
SECONDS=0
log() {
    local fname=${BASH_SOURCE[1]##*/}
    echo -e "$(date '+%Y-%m-%dT%H:%M:%S') (${fname}:${BASH_LINENO[0]}:${FUNCNAME[1]}) $@"
}
help_message=$(cat << EOF 1>&2
Usage $0 <inscp> <outdir>
e.g.
$0 data/test/wav.scp data/test/

Options:
 --cmd  <run.pl|queue.pl|slurm.pl>     # cmd
 --nj <N>                              # The number of jobs
EOF
)

nj=10
log "$0 $*"
cmd=utils/run.pl

. utils/parse_options.sh || exit 1;

if [ $# -ne 2 ]; then
    log "Error: invalid command line arguments"

    exit 1
fi

if ! which sox &> /dev/null; then
    log "Error: Please install sox"
    exit 1
fi

inscp=$1
if [ ! -f ${inscp} ]; then
    log "Error: No such file: ${inscp}"
    exit 1
fi
dir=$2
nutt=$(<${inscp} wc -l)
nj=$((${nj}<${nutt}?${nj}:${nutt}))
logdir=${dir}/logs

mkdir -p ${logdir}

cat << EOF > ${logdir}/_create_utt2num_samples.sh
#/bin/bash

# Generated by $0

set -euo pipefail
echo "\$0 \$*"

if [ \$# -ne 2 ]; then
    echo "Usage \$0 <inscp> <outscp>"
    exit 1
fi

inscp=\$1
outscp=\$2

while read line <&3; do
    uttid=\$(echo \${line} | cut -d" " -f1)
    wav=\$(echo \${line} | cut -d" " -f2-)
    nsamples=\$(soxi -s \${wav})
    echo "\${uttid} \${nsamples}"
done 3<\${inscp} > \${outscp}
EOF
chmod +x ${logdir}/_create_utt2num_samples.sh

split_scps=""
for n in $(seq ${nj}); do
    split_scps="${split_scps} ${logdir}/wav.${n}.scp"
done
# Split the first reference
utils/split_scp.pl ${inscp} ${split_scps} || exit 1;


${cmd} JOB=1:${nj} ${logdir}/create_utt2num_samples.JOB.log \
    ${logdir}/_create_utt2num_samples.sh ${logdir}/wav.JOB.scp ${logdir}/utt2num_samples.JOB

# Workaround for the NFS problem
ls ${logdir} > /dev/null


for n in $(seq ${nj}); do
    cat ${logdir}/utt2num_samples.${n}
done > ${dir}/utt2num_samples

log "Successfully finished. [elapsed=${SECONDS}s]"
